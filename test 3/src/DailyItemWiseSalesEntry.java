import com.toedter.calendar.JDateChooser;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

public class DailyItemWiseSalesEntry extends JFrame implements MouseListener {

    public DailyItemWiseSalesEntry(User salesManager) {
        DailyItemWiseSalesEntry.salesManager = salesManager;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        setResizable(false);
        jPanel1 = new JPanel();
        jPanel2 = new JPanel();
        jLabel2 = new JLabel();
        jDateChooser1 = new JDateChooser();
        backLogo = new JLabel();

        backLogo = new JLabel();
        ImageIcon icon2 = new ImageIcon("test 3/picture/backlogo.png");
        backLogo.setIcon(icon2);
        backLogo.setBounds(10, 8, icon2.getIconWidth(), icon2.getIconHeight());
        backLogo.addMouseListener(this);

        jPanel1.add(backLogo);

        JPanel scrollPanel = new JPanel();
        jScrollPane1 = new JScrollPane(scrollPanel);

        int buttonHeight = 50;
        int numberOfButtons = Item.getAllItemList().length;
        int overallPanelHeight = buttonHeight * numberOfButtons;

        scrollPanel.setPreferredSize(new Dimension(jScrollPane1.getWidth(), overallPanelHeight));
        scrollPanel.setBackground(Color.WHITE);
        scrollPanel.setLayout(new GridLayout(
                (int) Math.ceil((double) numberOfButtons / 3),
                3,
                10,
                10)
        );

        ArrayList<JButton> buttonList = new ArrayList<>();

        for (String item: Item.getAllItemList()) {
            JButton button = new JButton(item);
            button.setBackground(Color.WHITE);
            buttonList.add(button);
        }

        for (JButton but : buttonList) {
            but.addActionListener(e -> {
                for (JButton otherButton: buttonList) {
                    otherButton.setBackground(Color.WHITE);
                }
                but.setBackground(new Color(173, 216, 230));
                itemSelection.delete(0, itemSelection.length());
                itemSelection.append(but.getText());
            });
            scrollPanel.add(but);
        }

        NextButton = new JButton();
        jLabel1 = new JLabel();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new Color(153, 255, 255));

        jPanel2.setBackground(new Color(255, 255, 255));

        jLabel2.setFont(new Font("Verdana", 0, 14)); // NOI18N
        jLabel2.setText("Please choose a date you wish to modify or add the sales of item :");

        NextButton.setBackground(new Color(0, 153, 255));
        NextButton.setText("Next");
        NextButton.setFont(new Font("Verdana", Font.BOLD, 16));
        NextButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                NextButtonActionPerformed(evt);
            }
        });

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18))
                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap(40, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(NextButton, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 173, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane1, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 700, GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(14, 14, 14)
                                                .addComponent(jDateChooser1, GroupLayout.PREFERRED_SIZE, 34, GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 55, GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                                .addGap(24, 24, 24)
                                .addComponent(NextButton, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17))
        );

        jLabel1.setFont(new Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setText("Daily Item-wise Sales Entry");
        jLabel1.setForeground(new Color(139, 69, 19));

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap(232, Short.MAX_VALUE)
                                .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 419, GroupLayout.PREFERRED_SIZE)
                                .addGap(151, 151, 151))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel1, GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>


    private void NextButtonActionPerformed(ActionEvent evt) {
        if(evt.getSource() == NextButton){
            try {
                Date inputDate = jDateChooser1.getDate();
                Date currentDate = new Date();
                if (inputDate.after(currentDate)) {
                    JOptionPane.showMessageDialog(this, "Wrong date. Please re-enter the date and ensure that it is before today.");
                } else if (itemSelection.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Please select an item before proceed.");
                } else {
                    SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                    String soldDate = dateFormat.format(inputDate);

                    JPanel dialogPanel = new JPanel();
                    dialogPanel.setLayout(new BoxLayout(dialogPanel, BoxLayout.Y_AXIS));
                    JLabel promptText1 = new JLabel(String.format(
                            "Item: %s (%s)",
                            itemSelection,
                            Item.getItemIDFromName(itemSelection.toString())
                            )
                    );
                    JLabel promptText2 = new JLabel(String.format(
                            "Date: %s", soldDate
                    ));
                    JLabel promptText4 = new JLabel(String.format(
                            "Quantity: %s", Item.getQuantityFromName(itemSelection.toString())
                    ));
                    JLabel promptText3 = new JLabel("Please input a quantity:");
                    JTextField inputField = new JTextField();
                    String salesID;
                    boolean editingSales = false;
                    if ((salesID = Sales.retrieveSalesID(Item.getItemIDFromName(itemSelection.toString()), soldDate)) != null) {
                        inputField.setText(String.valueOf(Sales.retrieveSalesQuantity(salesID)));
                        editingSales = true;
                    }
                    dialogPanel.add(promptText1);
                    dialogPanel.add(promptText2);
                    dialogPanel.add(promptText4);
                    dialogPanel.add(promptText3);
                    dialogPanel.add(inputField);

                    int dialogChoice = JOptionPane.showConfirmDialog(
                            DailyItemWiseSalesEntry.this,
                            dialogPanel,
                            "Quantity Sold",
                            JOptionPane.YES_NO_CANCEL_OPTION
                    );
                    if (dialogChoice == JOptionPane.YES_OPTION) {
                        int quantity = Integer.parseInt(inputField.getText());
                        System.out.println(Item.getQuantityFromName(itemSelection.toString()));
                        if (quantity <= 0 || quantity > Integer.parseInt(inputField.getText()) + Item.getQuantityFromName(itemSelection.toString())) {
                            throw new NumberFormatException();
                        }

                        if (editingSales) {
                            Sales.replaceExistingSales(salesID, quantity);
                        } else {
                            Sales.appendToList(new Sales(Sales.generateNewSalesID(), Item.getItemIDFromName(itemSelection.toString()), soldDate, quantity));
                            Item.subtractItemQuantity(Item.getItemIDFromName(itemSelection.toString()), quantity);
                            TextFileOperations.writeSalesFile();
                            JOptionPane.showMessageDialog(this, "Quantity Sold successfully.");
                        }

                    }
                }
            } catch (NullPointerException ex) {
                JOptionPane.showMessageDialog(this, "Invalid date. Please provide a date.");
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Invalid input. Please provide a correct number.");
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DailyItemWiseSalesEntry.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(DailyItemWiseSalesEntry.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(DailyItemWiseSalesEntry.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(DailyItemWiseSalesEntry.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DailyItemWiseSalesEntry(salesManager).setVisible(true);;
            }
        });
    }

    // Variables declaration - do not modify
    private static User salesManager;
    private JButton NextButton;
    private JDateChooser jDateChooser1;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JScrollPane jScrollPane1;
    private final StringBuilder itemSelection = new StringBuilder();
    private JLabel backLogo;

    @Override
    public void mouseClicked(MouseEvent e) {
        if (e.getSource() == backLogo){
            new SalesManagerPage(salesManager).setVisible(true);
            dispose();
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {

    }

    @Override
    public void mouseReleased(MouseEvent e) {

    }

    @Override
    public void mouseEntered(MouseEvent e) {

    }

    @Override
    public void mouseExited(MouseEvent e) {

    }
    // End of variables declaration
}
